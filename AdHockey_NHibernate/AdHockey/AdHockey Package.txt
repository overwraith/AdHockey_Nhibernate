CREATE OR REPLACE PACKAGE ADHOCKEY AS 
    TYPE ARR_INT16 IS TABLE OF NUMBER(5, 0) INDEX BY PLS_INTEGER;
    TYPE ARR_INT32 IS TABLE OF NUMBER(10, 0) INDEX BY PLS_INTEGER;
    TYPE ARR_INT64 IS TABLE OF NUMBER(19, 0) INDEX BY PLS_INTEGER;
    TYPE ARR_CHAR IS TABLE OF CHAR INDEX BY PLS_INTEGER;
    TYPE ARR_DEC IS TABLE OF FLOAT(29) INDEX BY PLS_INTEGER;
    TYPE ARR_FLOAT IS TABLE OF FLOAT(7) INDEX BY PLS_INTEGER;
    TYPE ARR_DATE IS TABLE OF DATE INDEX BY PLS_INTEGER;
	TYPE ARR_STR IS TABLE OF VARCHAR(64) INDEX BY PLS_INTEGER;
   
    PROCEDURE BULK_UPLOAD_INT32(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2, I_ARR ARR_INT32);
    PROCEDURE BULK_UPLOAD_INT64(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2, I_ARR ARR_INT64);
    PROCEDURE BULK_UPLOAD_INT16(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2, I_ARR ARR_INT16);
    PROCEDURE BULK_UPLOAD_CHAR(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2, I_ARR ARR_CHAR);    
    PROCEDURE BULK_UPLOAD_DECIMAL(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2, I_ARR ARR_DEC);
    PROCEDURE BULK_UPLOAD_FLOAT(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2, I_ARR ARR_FLOAT);
    PROCEDURE BULK_UPLOAD_DATETIME(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2, I_ARR ARR_DATE);
    PROCEDURE DELETE_BULK_ITEMS_INT32(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2);
    PROCEDURE DELETE_BULK_ITEMS_INT64(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2);
    PROCEDURE DELETE_BULK_ITEMS_INT16(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2);
    PROCEDURE DELETE_BULK_ITEMS_CHAR(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2);
    PROCEDURE DELETE_BULK_ITEMS_DECIMAL(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2);
    PROCEDURE DELETE_BULK_ITEMS_FLOAT(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2);
    PROCEDURE DELETE_BULK_ITEMS_DATETIME(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2);
	PROCEDURE BULK_UPLOAD_STRING(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2, I_ARR ARR_STR);

	FUNCTION GET_DEFAULT_SCHEMA RETURN VARCHAR2;
END ADHOCKEY;
/
CREATE OR REPLACE PACKAGE BODY ADHOCKEY AS 
    PROCEDURE BULK_UPLOAD_INT32(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2, I_ARR ARR_INT32) IS
    BEGIN
        FOR I IN 1..I_ARR.COUNT LOOP
            INSERT INTO BULK_ITEMS_INT32 (TEMPLATE_ID, USER_ID, SESSION_ID, BULK_VALUE) VALUES (I_TEMPLATE_ID, I_USER_ID, I_SESSION_ID, I_ARR(I));
        END LOOP;
    END;
    
    PROCEDURE BULK_UPLOAD_INT64(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2, I_ARR ARR_INT64) IS
    BEGIN
        FOR I IN 1..I_ARR.COUNT LOOP
            INSERT INTO BULK_ITEMS_INT64 (TEMPLATE_ID, USER_ID, SESSION_ID, BULK_VALUE) VALUES (I_TEMPLATE_ID, I_USER_ID, I_SESSION_ID, I_ARR(I));
        END LOOP;
    END;
    
    PROCEDURE BULK_UPLOAD_INT16(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2, I_ARR ARR_INT16) IS
    BEGIN
        FOR I IN 1..I_ARR.COUNT LOOP
            INSERT INTO BULK_ITEMS_INT16 (TEMPLATE_ID, USER_ID, SESSION_ID, BULK_VALUE) VALUES (I_TEMPLATE_ID, I_USER_ID, I_SESSION_ID, I_ARR(I));
        END LOOP;
    END;
    
    PROCEDURE BULK_UPLOAD_CHAR(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2, I_ARR ARR_CHAR) IS
    BEGIN
        FOR I IN 1..I_ARR.COUNT LOOP
            INSERT INTO BULK_ITEMS_CHAR (TEMPLATE_ID, USER_ID, SESSION_ID, BULK_VALUE) VALUES (I_TEMPLATE_ID, I_USER_ID, I_SESSION_ID, I_ARR(I));
        END LOOP;
    END;
    
    PROCEDURE BULK_UPLOAD_DECIMAL(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2, I_ARR ARR_DEC) IS
    BEGIN
        FOR I IN 1..I_ARR.COUNT LOOP
            INSERT INTO BULK_ITEMS_DECIMAL (TEMPLATE_ID, USER_ID, SESSION_ID, BULK_VALUE) VALUES (I_TEMPLATE_ID, I_USER_ID, I_SESSION_ID, I_ARR(I));
        END LOOP;
    END;
    
    PROCEDURE BULK_UPLOAD_FLOAT(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2, I_ARR ARR_FLOAT) IS
    BEGIN
        FOR I IN 1..I_ARR.COUNT LOOP
            INSERT INTO BULK_ITEMS_FLOAT (TEMPLATE_ID, USER_ID, SESSION_ID, BULK_VALUE) VALUES (I_TEMPLATE_ID, I_USER_ID, I_SESSION_ID, I_ARR(I));
        END LOOP;
    END;

    PROCEDURE BULK_UPLOAD_DATETIME(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2, I_ARR ARR_DATE) IS
    BEGIN
        FOR I IN 1..I_ARR.COUNT LOOP
            INSERT INTO BULK_ITEMS_DATETIME (TEMPLATE_ID, USER_ID, SESSION_ID, BULK_VALUE) VALUES (I_TEMPLATE_ID, I_USER_ID, I_SESSION_ID, I_ARR(I));
        END LOOP;
    END;

	PROCEDURE BULK_UPLOAD_STRING(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2, I_ARR ARR_STR) IS
    BEGIN
        FOR I IN 1..I_ARR.COUNT LOOP
            INSERT INTO BULK_ITEMS_STRING (TEMPLATE_ID, USER_ID, SESSION_ID, BULK_VALUE) VALUES (I_TEMPLATE_ID, I_USER_ID, I_SESSION_ID, I_ARR(I));
        END LOOP;
    END;

    PROCEDURE DELETE_BULK_ITEMS_INT32(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2) IS
    BEGIN
        DELETE FROM BULK_ITEMS_INT32 BI WHERE BI.TEMPLATE_ID = I_TEMPLATE_ID AND USER_ID = I_USER_ID AND SESSION_ID = I_SESSION_ID;
    END;
    
    PROCEDURE DELETE_BULK_ITEMS_INT64(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2) IS
    BEGIN
        DELETE FROM BULK_ITEMS_INT64 BI WHERE BI.TEMPLATE_ID = I_TEMPLATE_ID AND  USER_ID = I_USER_ID AND SESSION_ID = I_SESSION_ID;
    END;
    
    PROCEDURE DELETE_BULK_ITEMS_INT16(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2) IS
    BEGIN
        DELETE FROM BULK_ITEMS_INT16 BI WHERE BI.TEMPLATE_ID = I_TEMPLATE_ID AND  USER_ID = I_USER_ID AND SESSION_ID = I_SESSION_ID;
    END;
    
    PROCEDURE DELETE_BULK_ITEMS_CHAR(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2) IS
    BEGIN
        DELETE FROM BULK_ITEMS_CHAR BI WHERE BI.TEMPLATE_ID = I_TEMPLATE_ID AND USER_ID = I_USER_ID AND SESSION_ID = I_SESSION_ID;
    END;
    
    PROCEDURE DELETE_BULK_ITEMS_DECIMAL(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2) IS
    BEGIN
        DELETE FROM BULK_ITEMS_DECIMAL BI WHERE BI.TEMPLATE_ID = I_TEMPLATE_ID AND  USER_ID = I_USER_ID AND SESSION_ID = I_SESSION_ID;
    END;
    
    PROCEDURE DELETE_BULK_ITEMS_FLOAT(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2) IS
    BEGIN
        DELETE FROM BULK_ITEMS_FLOAT BI WHERE BI.TEMPLATE_ID = I_TEMPLATE_ID AND  USER_ID = I_USER_ID AND SESSION_ID = I_SESSION_ID;
    END;

    PROCEDURE DELETE_BULK_ITEMS_DATETIME(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2) IS
    BEGIN
        DELETE FROM BULK_ITEMS_DATETIME BI WHERE BI.TEMPLATE_ID = I_TEMPLATE_ID AND  USER_ID = I_USER_ID AND SESSION_ID = I_SESSION_ID;
    END;

	PROCEDURE DELETE_BULK_ITEMS_STRING(I_TEMPLATE_ID NUMBER, I_USER_ID NUMBER, I_SESSION_ID VARCHAR2) IS
    BEGIN
        DELETE FROM BULK_ITEMS_STRING BI WHERE BI.TEMPLATE_ID = I_TEMPLATE_ID AND  USER_ID = I_USER_ID AND SESSION_ID = I_SESSION_ID;
    END;

	FUNCTION GET_DEFAULT_SCHEMA
		RETURN VARCHAR2
	IS
		SCHEMA_NAME VARCHAR2(64);
	BEGIN
		SCHEMA_NAME := SYS_CONTEXT('USERENV', 'CURRENT_SCHEMA');

		RETURN SCHEMA_NAME;
	END GET_DEFAULT_SCHEMA;

END ADHOCKEY;